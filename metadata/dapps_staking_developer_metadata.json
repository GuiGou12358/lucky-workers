{
    "source": {
      "hash": "0x8157e60619719c8bc2314792a220560d4a7c812aa08444150fdf6cfe3666f8e0",
      "language": "ink! 3.4.0",
      "compiler": "rustc 1.65.0-nightly"
    },
    "contract": {
      "name": "dapps_staking_developer",
      "version": "0.1.0",
      "authors": [
        "guigou"
      ]
    },
    "V3": {
      "spec": {
        "constructors": [
          {
            "args": [],
            "docs": [],
            "label": "new",
            "payable": false,
            "selector": "0x9bae9d5e"
          }
        ],
        "docs": [],
        "events": [],
        "messages": [
          {
            "args": [
              {
                "label": "value",
                "type": {
                  "displayName": [
                    "Balance"
                  ],
                  "type": 12
                }
              }
            ],
            "docs": [],
            "label": "withdraw",
            "mutates": true,
            "payable": false,
            "returnType": {
              "displayName": [
                "Result"
              ],
              "type": 13
            },
            "selector": "0x410fcc9d"
          },
          {
            "args": [
              {
                "label": "new_code_hash",
                "type": {
                  "displayName": [],
                  "type": 7
                }
              }
            ],
            "docs": [],
            "label": "upgrade_contract",
            "mutates": true,
            "payable": false,
            "returnType": {
              "displayName": [
                "Result"
              ],
              "type": 13
            },
            "selector": "0x1345543d"
          },
          {
            "args": [],
            "docs": [],
            "label": "get_role_whitelisted_address",
            "mutates": false,
            "payable": false,
            "returnType": {
              "displayName": [
                "RoleType"
              ],
              "type": 1
            },
            "selector": "0x9e448aa7"
          },
          {
            "args": [
              {
                "label": "role",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "RevokeRoleInput1"
                  ],
                  "type": 1
                }
              },
              {
                "label": "account",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "RevokeRoleInput2"
                  ],
                  "type": 6
                }
              }
            ],
            "docs": [
              " Revokes `role` from `account`.",
              "",
              " On success a `RoleRevoked` event is emitted.",
              "",
              " # Errors",
              "",
              " Returns with `MissingRole` error if caller can't grant the `role` or if `account` doesn't have `role`."
            ],
            "label": "AccessControl::revoke_role",
            "mutates": true,
            "payable": false,
            "returnType": {
              "displayName": [
                "accesscontrol_external",
                "RevokeRoleOutput"
              ],
              "type": 16
            },
            "selector": "0x6e4f0991"
          },
          {
            "args": [
              {
                "label": "role",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "GrantRoleInput1"
                  ],
                  "type": 1
                }
              },
              {
                "label": "account",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "GrantRoleInput2"
                  ],
                  "type": 6
                }
              }
            ],
            "docs": [
              " Grants `role` to `account`.",
              "",
              " On success a `RoleGranted` event is emitted.",
              "",
              " # Errors",
              "",
              " Returns with `MissingRole` error if caller can't grant the role.",
              " Returns with `RoleRedundant` error `account` has `role`."
            ],
            "label": "AccessControl::grant_role",
            "mutates": true,
            "payable": false,
            "returnType": {
              "displayName": [
                "accesscontrol_external",
                "GrantRoleOutput"
              ],
              "type": 16
            },
            "selector": "0x4ac062fd"
          },
          {
            "args": [
              {
                "label": "role",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "RenounceRoleInput1"
                  ],
                  "type": 1
                }
              },
              {
                "label": "account",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "RenounceRoleInput2"
                  ],
                  "type": 6
                }
              }
            ],
            "docs": [
              " Revokes `role` from the calling account.",
              " Roles are often managed via `grant_role` and `revoke_role`: this function's",
              " purpose is to provide a mechanism for accounts to lose their privileges",
              " if they are compromised (such as when a trusted device is misplaced).",
              "",
              " On success a `RoleRevoked` event is emitted.",
              "",
              " # Errors",
              "",
              " Returns with `InvalidCaller` error if caller is not `account`.",
              " Returns with `MissingRole` error if `account` doesn't have `role`."
            ],
            "label": "AccessControl::renounce_role",
            "mutates": true,
            "payable": false,
            "returnType": {
              "displayName": [
                "accesscontrol_external",
                "RenounceRoleOutput"
              ],
              "type": 16
            },
            "selector": "0xeaf1248a"
          },
          {
            "args": [
              {
                "label": "role",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "GetRoleAdminInput1"
                  ],
                  "type": 1
                }
              }
            ],
            "docs": [
              " Returns the admin role that controls `role`. See `grant_role` and `revoke_role`."
            ],
            "label": "AccessControl::get_role_admin",
            "mutates": false,
            "payable": false,
            "returnType": {
              "displayName": [
                "accesscontrol_external",
                "GetRoleAdminOutput"
              ],
              "type": 1
            },
            "selector": "0x83da3bb2"
          },
          {
            "args": [
              {
                "label": "role",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "HasRoleInput1"
                  ],
                  "type": 1
                }
              },
              {
                "label": "address",
                "type": {
                  "displayName": [
                    "accesscontrol_external",
                    "HasRoleInput2"
                  ],
                  "type": 6
                }
              }
            ],
            "docs": [
              " Returns `true` if `account` has been granted `role`."
            ],
            "label": "AccessControl::has_role",
            "mutates": false,
            "payable": false,
            "returnType": {
              "displayName": [
                "accesscontrol_external",
                "HasRoleOutput"
              ],
              "type": 17
            },
            "selector": "0xc1d9ac18"
          }
        ]
      },
      "storage": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "cell": {
                          "key": "0x75b08c5a00000000000000000000000000000000000000000000000000000000",
                          "ty": 0
                        }
                      },
                      "name": "admin_roles"
                    },
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "cell": {
                                  "key": "0x2779f6fc00000000000000000000000000000000000000000000000000000000",
                                  "ty": 4
                                }
                              },
                              "name": "members"
                            },
                            {
                              "layout": {
                                "enum": {
                                  "dispatchKey": "0x2879f6fc00000000000000000000000000000000000000000000000000000000",
                                  "variants": {
                                    "0": {
                                      "fields": [
                                        {
                                          "layout": {
                                            "cell": {
                                              "key": "0x2979f6fc00000000000000000000000000000000000000000000000000000000",
                                              "ty": 9
                                            }
                                          },
                                          "name": null
                                        }
                                      ]
                                    },
                                    "1": {
                                      "fields": []
                                    }
                                  }
                                }
                              },
                              "name": "_reserved"
                            }
                          ]
                        }
                      },
                      "name": "members"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x76b08c5a00000000000000000000000000000000000000000000000000000000",
                          "variants": {
                            "0": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x77b08c5a00000000000000000000000000000000000000000000000000000000",
                                      "ty": 9
                                    }
                                  },
                                  "name": null
                                }
                              ]
                            },
                            "1": {
                              "fields": []
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ]
                }
              },
              "name": "access"
            }
          ]
        }
      },
      "types": [
        {
          "id": 0,
          "type": {
            "def": {
              "composite": {
                "fields": [
                  {
                    "type": 2
                  }
                ]
              }
            },
            "params": [
              {
                "name": "K",
                "type": 1
              },
              {
                "name": "V",
                "type": 1
              }
            ],
            "path": [
              "openbrush_lang",
              "storage",
              "mapping",
              "Mapping"
            ]
          }
        },
        {
          "id": 1,
          "type": {
            "def": {
              "primitive": "u32"
            }
          }
        },
        {
          "id": 2,
          "type": {
            "def": {
              "sequence": {
                "type": 3
              }
            }
          }
        },
        {
          "id": 3,
          "type": {
            "def": {
              "tuple": [
                1,
                1
              ]
            }
          }
        },
        {
          "id": 4,
          "type": {
            "def": {
              "composite": {
                "fields": [
                  {
                    "type": 10
                  }
                ]
              }
            },
            "params": [
              {
                "name": "K",
                "type": 5
              },
              {
                "name": "V",
                "type": 9
              }
            ],
            "path": [
              "openbrush_lang",
              "storage",
              "mapping",
              "Mapping"
            ]
          }
        },
        {
          "id": 5,
          "type": {
            "def": {
              "tuple": [
                1,
                6
              ]
            }
          }
        },
        {
          "id": 6,
          "type": {
            "def": {
              "composite": {
                "fields": [
                  {
                    "type": 7,
                    "typeName": "[u8; 32]"
                  }
                ]
              }
            },
            "path": [
              "ink_env",
              "types",
              "AccountId"
            ]
          }
        },
        {
          "id": 7,
          "type": {
            "def": {
              "array": {
                "len": 32,
                "type": 8
              }
            }
          }
        },
        {
          "id": 8,
          "type": {
            "def": {
              "primitive": "u8"
            }
          }
        },
        {
          "id": 9,
          "type": {
            "def": {
              "tuple": []
            }
          }
        },
        {
          "id": 10,
          "type": {
            "def": {
              "sequence": {
                "type": 11
              }
            }
          }
        },
        {
          "id": 11,
          "type": {
            "def": {
              "tuple": [
                5,
                9
              ]
            }
          }
        },
        {
          "id": 12,
          "type": {
            "def": {
              "primitive": "u128"
            }
          }
        },
        {
          "id": 13,
          "type": {
            "def": {
              "variant": {
                "variants": [
                  {
                    "fields": [
                      {
                        "type": 9
                      }
                    ],
                    "index": 0,
                    "name": "Ok"
                  },
                  {
                    "fields": [
                      {
                        "type": 14
                      }
                    ],
                    "index": 1,
                    "name": "Err"
                  }
                ]
              }
            },
            "params": [
              {
                "name": "T",
                "type": 9
              },
              {
                "name": "E",
                "type": 14
              }
            ],
            "path": [
              "Result"
            ]
          }
        },
        {
          "id": 14,
          "type": {
            "def": {
              "variant": {
                "variants": [
                  {
                    "fields": [
                      {
                        "type": 15,
                        "typeName": "AccessControlError"
                      }
                    ],
                    "index": 0,
                    "name": "AccessControlError"
                  },
                  {
                    "index": 1,
                    "name": "TransferError"
                  },
                  {
                    "index": 2,
                    "name": "UpgradeError"
                  }
                ]
              }
            },
            "path": [
              "dapps_staking_developer",
              "dapps_staking_developer",
              "ContractError"
            ]
          }
        },
        {
          "id": 15,
          "type": {
            "def": {
              "variant": {
                "variants": [
                  {
                    "index": 0,
                    "name": "InvalidCaller"
                  },
                  {
                    "index": 1,
                    "name": "MissingRole"
                  },
                  {
                    "index": 2,
                    "name": "RoleRedundant"
                  }
                ]
              }
            },
            "path": [
              "openbrush_contracts",
              "traits",
              "errors",
              "access_control",
              "AccessControlError"
            ]
          }
        },
        {
          "id": 16,
          "type": {
            "def": {
              "variant": {
                "variants": [
                  {
                    "fields": [
                      {
                        "type": 9
                      }
                    ],
                    "index": 0,
                    "name": "Ok"
                  },
                  {
                    "fields": [
                      {
                        "type": 15
                      }
                    ],
                    "index": 1,
                    "name": "Err"
                  }
                ]
              }
            },
            "params": [
              {
                "name": "T",
                "type": 9
              },
              {
                "name": "E",
                "type": 15
              }
            ],
            "path": [
              "Result"
            ]
          }
        },
        {
          "id": 17,
          "type": {
            "def": {
              "primitive": "bool"
            }
          }
        }
      ]
    }
  }